(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{268:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_2-vue常用的修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue常用的修饰符"}},[t._v("#")]),t._v(" 2. vue常用的修饰符")]),t._v(" "),s("hr"),t._v(" "),s("ol",[s("li",[s("strong",[t._v(".stop")]),t._v("：阻止点击事件冒泡(默认是事件冒泡)。等同于JS中的event.stopPropagation()。使用了.stop后，点击子节点不会捕获到父节点的事件。")]),t._v(" "),s("li",[s("strong",[t._v(".prevent")]),t._v("：用于阻止默认事件。等同于JS的event.preventDefault()。比如a标签。")]),t._v(" "),s("li",[s("strong",[t._v(".capture")]),t._v("：用于事件捕获。点击子节点，就会触发从外至内 父节点 --\x3e 子节点的点击事件。")]),t._v(" "),s("li",[s("strong",[t._v(".self")]),t._v("：只会触发自己范围内的事件，不包含子元素。")]),t._v(" "),s("li",[s("strong",[t._v(".once")]),t._v("：点击事件将只会触发一次。")]),t._v(" "),s("li",[s("strong",[t._v(".passive")]),t._v("：表示就是设置 { passive: true }，表示处理事件函数中不会调用preventDefault函数，不阻止事件的默认行为，就会减少了额外的监听，从而提高了性能；所以不能和.prevent修饰符一同使用，否则浏览器会报错。")]),t._v(" "),s("li",[s("strong",[t._v(".trim")]),t._v("：自动过滤用户输入的首尾空格。")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model.trim")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[s("strong",[t._v(".number")]),t._v("：将输出字符串转为Number类型·（虽然type类型定义了是number类型，但是如果输入字符串，输出的是string）")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model.number")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("ol",{attrs:{start:"9"}},[s("li",[s("strong",[t._v(".lazy")]),t._v("：在改变后才触发（也就是说只有光标离开input输入框的时候值才会改变）")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model.lazy")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("ol",{attrs:{start:"10"}},[s("li",[s("strong",[t._v("鼠标按钮修饰符")]),t._v("：.left，.right，.middle")]),t._v(" "),s("li",[s("strong",[t._v("键盘修饰符")]),t._v("：.enter，.F2等。可以通过全局 config.keyCodes 对象自定义按键修饰符别名："),s("br"),t._v("\nVue.config.keyCodes.f1 = 112，后面是keycode值，前面是自定义的别名。Vue.config.keyCodes可以是一个对象，自定义多个别名。")]),t._v(" "),s("li",[s("strong",[t._v(".exact")]),t._v("：必须是精确的系统修饰符组合才触发事件。")]),t._v(" "),s("li",[s("strong",[t._v(".native")]),t._v("：在某个组件的根元素上监听一个原生事件。通俗点讲：就是在父组件中给子组件绑定一个原生的事件，就将子组件变成了普通的HTML标签，不加'.native'事件是无法触发的。也可以理解为该修饰符的作用就是把一个vue组件转化为一个普通的HTML标签，并且该修饰符对普通HTML标签是没有任何作用的。")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 不会触发click事件 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("my-component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 会触发click事件 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("my-component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click.native")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);