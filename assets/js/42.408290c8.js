(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{248:function(t,e,s){"use strict";s.r(e);var l=s(28),r=Object(l.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_3-说说浏览器的事件环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-说说浏览器的事件环"}},[t._v("#")]),t._v(" 3. 说说浏览器的事件环")]),t._v(" "),s("hr"),t._v(" "),s("ol",[s("li",[t._v("js是单线程的，代码在栈中执行，栈是先进后出")]),t._v(" "),s("li",[t._v("对于异步执行的事件，异步回调或者异步事件得到结果后，会放到一个队列，当主栈中的功能都执行完后，会从队列中的第一个开始执行")]),t._v(" "),s("li",[t._v("浏览器的事件环机制中异步方法也会再分类：1）宏任务(setTimeout，setInterval)、2）微任务(Promise)。")]),t._v(" "),s("li",[t._v("异步队列一般是2个队列：微任务队列，宏任务队列。微任务会在宏任务之前执行")]),t._v(" "),s("li",[t._v("当代码栈中的代码执行完成后，会先从微任务队列中取，把微任务队列中的任务清空，然后从宏任务中取第一个，然后不会马上走宏任务队列中的第二个， 然后再去查看微任务队列，把微任务队列再清空。接下来，再去宏任务队列中取当时的第一个宏任务")])])])}),[],!1,null,null,null);e.default=r.exports}}]);